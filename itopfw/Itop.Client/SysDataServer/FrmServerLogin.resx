<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEgEAARIBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFI
        AwABEgMAAQEBAAEgBQABQAEUGgADAgEBAwMBAgMHAQgDDAEOAw0BEAMRARUDEwEYAxQBGQMTARgDEAET
        Aw0BDwMKAQwEBgMDAQIgAAFXAWMBawHHAWUBpQHEAf8BmgHNAeIB/wGkAdAB4wH/AYwBuQHMAf8BYwFu
        AXIBx7AAAwMBAgMdAScBUAFcAVgBsAFQAXkBawHaAUsBkAF5AewBSAGSAXgB7wFBAbEBjQH/AUEBsQGN
        Af8BQwGiAYQB+AFHAZIBeAHvAUkBiQF0AeoBUAF3AWkB2AFQAVgBUwGmAxkBIAMCAQEUAAMNARABOQF9
        AZwB8gEkAasB4AH/AUcBwQHvAf8BSQG9AesB/wFMAb4B6wH/AX8B0wH0Af8BswHjAfMB/wF1AYcBjAHZ
        rAADAgEBATYCNwJXAdcBugH/AVUB1gG4Af8BUQHUAbUB/wFPAdMBswH/AU0B0QGxAf8BSwHRAbAB/wFN
        AdIBsgH/AVAB0wG0Af8BUQHUAbYB/wFWAdcBugH/AVUB1AG3Af8DNQFUAwIBARQAATMBdQGYAf8BCAGU
        AdMB/wEZAa0B6QH/AT8BrgHbAf8BVgFZAVoBqQFSAVYBVwGpARgBmgHRAf8BggHXAfUB/wGxAd0B7QH/
        AzEBTKwAAzIBTQFQAdIBtAH/AVMB1wG7Af8BUwHXAbsB/wFTAdcBuwH/AVMB1wG7Af8BUwHXAbsB/wFT
        AdcBuwH/AVMB1wG7Af8BUwHXAbsB/wFTAdcBuwH/AU8B0QGzAf8DMgFNGAABNgFlAYIB/wEFAZQB0wH/
        ARsBrQHqAf8BQgGbAcQB/wgAARoBlAHIAf8BUgHFAe0B/wG4AeoB+gH/AWsBggGKAeOsAAMsAUEBTAHP
        AbIB/wFhAeEBzAH/AWAB4QHMAf8BYAHhAcwB/wFgAeEBzAH/AWAB4QHMAf8BYAHhAcwB/wFgAeEBzAH/
        AWAB4QHMAf8BYQHhAcwB/wFIAcwBrgH/AykBPBgAATABZgGDAf8BDAGNAcoB/wEVAacB5gH/AUcBugHq
        Af8BaQF4AYQB4wFhAXIBfQHjASwBqwHcAf8BRgHAAe0B/wGtAeEB8wH/AWcBeAGFAeOsAAMaASMBOwHF
        AaIB/wFvAecB1QH/AWUB5QHSAf8BcQHnAdUB/wGLAewB3QH/AZMB7QHgAf8BfAHpAdkB/wFoAeYB0wH/
        AWUB5QHSAf8BbQHnAdUB/wEvAb4BmAH/AxQBGRgAAz4BZwEcAYEBrwH/AQcBlgHYAf8BJAGyAe0B/wE4
        Ab8B9wH/ATEBuwHyAf8BIwGxAekB/wFJAcAB7wH/AYsBxwHfAf8DMQFLsAABPAE9ATwBZAFjAccBtAH5
        AYoB6gHbAf8BZQGsAZ8B7AFQAVoBVwGkAUwBUwFRAZUBWQF6AXEBywGCAegB1wH/AYEB5wHXAf8BaQHN
        AbUB+gFBAkIBcBwAAw0BEAE5AWYBfgHyAREBiQHCAf8BCAGWAdYB/wEVAaUB4QH/ARgBpQHgAf8BJgGs
        AeYB/wFmAcgB8AH/AVcBXAFeAaq4AAMeASkBTQFXAVQBnwMsAUIDJwE4AygBOQMcASYBTAFUAVIBmAFL
        AlABkQMeASgoAAE+AWgBhAHsARIBhwG/Af8BFwGgAdsB/wEuAasB4gH/AVUBvAHoAf8BWwF7AY0B4MQA
        AVABYgFaAbwBaAHgAckB/wFqAeIBywH/ATUBqgGBAf8DKQE8NAABOAF6AZgB/gFEAbYB3wH/AQoBnQHb
        Af8BUAGTAbQB/sQAAUIBQwFCAXIBSwHIAagB/wFQAdMBtQH/AU4B0gGzAf8BVgHXAbsB/wE/AYsBcQHs
        AwMBAjAAAkEBQgFxATwBsgHdAf8BBAGhAeIB/wMoATnEAAFNAYgBeAHgAVkB2wHAAf8BVAHYAbsB/wFU
        AdgBuwH/AVUB2AG8Af8BTQHMAa4B/wFAAUEBQAFtMAABVwFgAWYBwAEmAakB3AH/AQkBqQHpAf8DKAE5
        wAADAwECAUIBxgGlAf8BXQHeAcYB/wFcAd0BxQH/AVwB3QHFAf8BXAHdAcUB/wFeAd0BxgH/AU8BWgFW
        AagsAAFUAVcBWQGpAS0BtQHpAf8BEwGfAdgB/wErAboB7QH/AygBOcQAAUUBsAGWAfQBaQHlAdEB/wFj
        AeQB0AH/AWMB5AHQAf8BYwHkAdAB/wFfAd0BxwH/AUsBUAFPAZAsAAFPAVEBUgGWAUABcQGJAe8BDgGZ
        AdQB/wErAboB7gH/AygBOcQAAVEBcQFpAcUBdwHpAdgB/wFnAecB1QH/AWcB5wHVAf8BbwHpAdYB/wFR
        AdIBtQH/AyQBMzAAAUECQgFxAQ8BlQHOAf8BGAGyAewB/wMoATnEAAMmATcBVwGJAX4B2QGDAeUB0wH/
        AZYB7QHgAf8BZgHZAb8B/wFDAkQBdTAAAUECQgFxAUIBpAHLAf8BDgGPAccB/wEWAZ8B1gH/AygBOcgA
        AxIBFgE8AT0BPAFkAUcBSgFJAYADKAE7NAADOgFeAVIBXgFlAcABDQGKAcIB/wEuAX0BogH/AxkBIP8A
        EQADNwFYARoBfgGrAf8DAgEB/wDRAAFCAU0BPgcAAT4DAAEoAwABSAMAARIDAAEBAQABAQUAAdgXAAP/
        AQABwAEAAf8BAwHwBwABwAEAAXwBAQHwBwABwAEAAXwBAAHwBwAB4AEAAfwBMAHwBwAB4AEAAfwBAAHw
        BwAB4AEAAfwBAAHwBwAB8AEBAfwBAQHwBwAB+AEDAf8BAwHwBwAB/gEPAf8BhwHwBwAB/AEHAf8BhwHw
        BwAB/AEHAf8BhwHwBwAB+AEHAf8BBwHwBwAB/AEHAf8BBwHwBwAB/AEHAf8BhwHwBwAB/AEPAf8BBwHw
        BwAB/gEfAf8BBwHwBwAD/wGPAfAHAAT/AfAHAAs=
</value>
  </data>
</root>