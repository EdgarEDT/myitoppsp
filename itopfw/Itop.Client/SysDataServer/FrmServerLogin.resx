<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAz4BaAFXAVkBVwGxA2MB3AFLAYcBWgH/AUwBhgFaAf8BSwGGAVkB/wFM
        AYYBWgH/AUwBhQFaAf8BTAGGAVoB/wFdAX4BXQH4AVwBYAFcAdMBWQFbAVkBuwNLAYsBNgE3ATYBVwQA
        AUIBegHLAf8BZAGgAesB/wF2Aa0B7AH/AUsCTAGMtAABegGgAYEB/wFTAb4BeQH/AVcBvQF8Af8BVQG4
        AXoB/wFWAbkBegH/AVUBuAF6Af8BVgG5AXoB/wFWAbkBegH/AVYBuQF7Af8BVgG6AXsB/wFWAbwBfAH/
        AVcBvwF9Af8BVwG8AXwB/wFDAYEBRAH/BAABQgGBAdkB/wFDAYEB3AH/AYEB1QH7Af8BfgG+AfIB/wJQ
        AVIBmrAAAXoBnQGBAf8BUgG6AX8B/wFVAboBfwH/AVUBugGAAf8BVQG6AYAB/wFVAboBgAH/AVUBugF/
        Af8BVQG6AYAB/wFVAboBfwH/AVUBugF/Af8BVQG6AX8B/wFVAboBfwH/AVUBvAGAAf8BQQGBAUAB/wQA
        AWEBawFsAesBYAGiAesB/wFAAYEB1wH/AXsBxgH3Af8BfAG8AfEB/wNIAYCsAANjAdwBeQHLAYQB/wFS
        AbsBgQH/AVMBuwGBAf8BUgG7AYEB/wFTAbsBgQH/AVMBuwGBAf8BUwG8AYEB/wFTAbsBgQH/AVMBuwGB
        Af8BVAG7AYEB/wFTAbsBgQH/AVABrgF7Af8DWgG5CAABYAJsAfIBbQHFAfYB/wE9AYEB1QH/AX0B1QH6
        Af8BcgGuAewB/wM2AVaoAAFPAVABTwGVAYEB0gGjAf8BXQHCAYEB/wFOAb0BgQH/AU8BvQGBAf8BTwG9
        AYEB/wFPAb4BgQH/AU8BvAGBAf8BTwG+AYEB/wFPAb0BgQH/AU8BvgGBAf8BTwG/AYEB/wFaAYABaQH+
        AyEBLggAAygBOgFgAmwB8gFmAacB6QH/ATsBgQHSAf8BcgHJAfcB/wF4AcIB8gH/Az8Ba6QAAxMBGAFV
        AYIBXwH/AYEB1QGnAf8BQgG9AYEB/wFLAcABgQH/AUwBwwGBAf8BTAHGAYEB/wFNAcYBgQH/AUwBwQGB
        Af8BSwG/AYEB/wFMAcIBgQH/AUsBtwGBAf8DSwGNFAABYAJsAfIBaQHKAfUB/wE7AXkByAH/AXkB3wH9
        Af8BfQHHAfMB/wNTAaQDFAEZoAADHwErAWABZAFhAdUBgQHPAZwB/wFSAakBlgH/AUcBhAGtAf8BRAGB
        AcIB/wE2AYEBsgH/ATwBgQGLAf8BTAHHAYEB/wFLAasBgQH/AVYBVwFWAawDEgEWFAADKAE6AWACbAHy
        AWQBqgHnAf8BOwF4AcMB/wFvAcIB8AH/AVQBugHwAf8BOgGfAegB/wE8AZAB4gH/ATwBkAHiAf8BPQGK
        Ad4B/wNcAcADHwErkAADAwECAVwBXwFcAcMBZAGKAe8B/wFNAZkC/wFCAZEB/AH/AUYBlQH9Af8BQgGG
        AfcB/wEvAWwBgQH/Az8BaiQAAWACbAHyAWcBzQH0Af8BNQGMAd4B/wE3Ab0B9AH/ATgBvgH0Af8BOAG+
        AfQB/wE4Ab4B9AH/ATgBvwH0Af8BOAHHAfgB/wE+AYEB1AH/AyABLJAAA2EBzgFvAa8B/QH/AU8BnQH6
        Af8BUQGeAfsB/wFQAZ4B+gH/AVEBoQH8Af8BRAGBAd4B/wMWARwkAAMoAToBYwJwAe4BWAHQAfcB/wE4
        AcEB9AH/ATgBwQH0Af8BOAHBAfQB/wE4AcEB9AH/ATgBwQH0Af8BOAHCAfUB/wE4AckB+AH/AVcCWQG2
        kAABgQHCAfUB/wFxAbcB/gH/AVkBqQH7Af8BWwGsAfsB/wFeAawB/gH/AV0BrAH9Af8BYwG3Av8DOgFe
        KAADSwGJAVIBzQH1Af8BOAHFAfQB/wE4AcUB9AH/ATgBxQH0Af8BOAHFAfQB/wE1AcQB9AH/ATcBxQH0
        Af8BOAHGAfQB/wFfAm4B8IwAAxUBGwGFAboB3wH/AYEB1AL/AYEBywL/AYEBxAH9Af8BegHAAfwB/wF4
        Ab8B/AH/AYEBzQL/A0MBcygAA2EBzgFOAdYB+AH/ATgByQH0Af8BOAHJAfQB/wE4AcoB9AH/AUABvwHw
        Af8BXQJjAd8BWwHNAfMB/wE9AcwB9QH/AWkBwwHuAf+MAAMUARoBUwFKAUsB/wF4AYEBhgH/AYEBvgHm
        Af8BgQHcAv8BgQHXAv8BgQHXAv8BiAHvAv8DTQGRKAACWwFfAc0BVwHcAfgB/wE3AcwB9AH/ATcBzAH0
        Af8BNAHPAfUB/wFfAmMB0AQAA1oBtAGBAeQB+gH/AYEBzwHwAf+MAAMVARsBUwFOAUwB/wFQAUoBRwH/
        AU4BRAFBAf8BgQGfAaoB/wGLAecC/wGBAc4B4QH/AV8BZwFwAf8DUAGaKAACSwFMAYwBgAHbAfYB/wFP
        AdcB9gH/AV8B2gH2Af8BaAHfAfcB/wNVAaoEAANaAbQBgQHkAfkB/wFgAmUB2IwAAw8BEgFaAVQBUwH/
        AVgBUwFSAf8BVwFTAVEB/wFdAVkBXAH/AmMBZwH/AU8BRQFBAf8BUgFMAUsB/wNRAZwsAAFmAYMBjgH7
        AYEB6gH6Af8BfwHkAfcB/wGBAeQB9wH/AYEB5gH4Af8BgQHTAfAB/wF/AecB+QH/AYEB7QH6Af8DWAGt
        kAADUgGfAV8BWgFZAf8BXgFZAVcB/wFdAVcBVQH/AVsBVQFTAf8BWwFVAVQB/wFZAVMBUgH/AzYBVywA
        Az8BawGMAccB7QH/AYcB6gH4Af8BgQHrAfkB/wGBAesB+QH/AYEB7QH6Af8BgQHaAfMB/wNTAaEDDgER
        lAADUwGkAWMBXwFcAf8BaQJnAfkDUgGgA1oBvgMrAT84AANXAasBgQGxAeUB/wGBAa8B4wH/A2oB4QNA
        AW2IAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQABgAEBAQ8B/wQAAYABAQEH
        Af8EAAGAAQEBAwH/BAABgAEBAYEB/wQAAYABAQGAAf8EAAGAAQMB4AE/BAABwAEDAeABAQQAAeABDwH4
        BQAB8AEPAfgFAAHwAQ8B/AUAAeABDwH8BQAB4AEPAfwBCAQAAeABDwH8AQgEAAHgAQ8B/gUAAfABDwH+
        BQAB+AEfAf8BgwQACw==
</value>
  </data>
</root>