<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAz4BaAFXAVkBVwGxA2MB3AFKAYcBWQH/AUsBhgFZAf8BSgGGAVgB/wFL
        AYYBWQH/AUsBhQFZAf8BSwGGAVkB/wFdAX4BXQH4AVwBYAFcAdMBWQFbAVkBuwNLAYsBNgE3ATYBVwQA
        AUEBeQHLAf8BYwGgAesB/wF1Aa0B7AH/AUsCTAGMtAABeQGgAYEB/wFSAb4BeAH/AVYBvQF7Af8BVAG4
        AXkB/wFVAbkBeQH/AVQBuAF5Af8BVQG5AXkB/wFVAbkBeQH/AVUBuQF6Af8BVQG6AXoB/wFVAbwBewH/
        AVYBvwF8Af8BVgG8AXsB/wFCAYEBQwH/BAABQQGBAdkB/wFCAYEB3AH/AYEB1QH7Af8BfQG+AfIB/wJQ
        AVIBmrAAAXkBnQGBAf8BUQG6AX4B/wFUAboBfgH/AVQBugF/Af8BVAG6AX8B/wFUAboBfwH/AVQBugF+
        Af8BVAG6AX8B/wFUAboBfgH/AVQBugF+Af8BVAG6AX4B/wFUAboBfgH/AVQBvAF/Af8BQAGAAT8B/wQA
        AWEBawFsAesBXwGiAesB/wE/AYEB1wH/AXoBxgH3Af8BewG8AfEB/wNIAYCsAANjAdwBeAHLAYQB/wFR
        AbsBgQH/AVIBuwGBAf8BUQG7AYEB/wFSAbsBgQH/AVIBuwGBAf8BUgG8AYEB/wFSAbsBgQH/AVIBuwGB
        Af8BUwG7AYEB/wFSAbsBgQH/AU8BrgF6Af8DWgG5CAABYAJsAfIBbAHFAfYB/wE8AYEB1QH/AXwB1QH6
        Af8BcQGuAewB/wM2AVaoAAFPAVABTwGVAYEB0gGjAf8BXAHCAYEB/wFNAb0BgQH/AU4BvQGBAf8BTgG9
        AYEB/wFOAb4BgQH/AU4BvAGBAf8BTgG+AYEB/wFOAb0BgQH/AU4BvgGBAf8BTgG/AYEB/wFZAYABaAH+
        AyEBLggAAygBOgFgAmwB8gFlAacB6QH/AToBgQHSAf8BcQHJAfcB/wF3AcIB8gH/Az8Ba6QAAxMBGAFU
        AYIBXgH/AYEB1QGnAf8BQQG9AYEB/wFKAcABgQH/AUsBwwGBAf8BSwHGAYEB/wFMAcYBgQH/AUsBwQGB
        Af8BSgG/AYEB/wFLAcIBgQH/AUoBtwGBAf8DSwGNFAABYAJsAfIBaAHKAfUB/wE6AXgByAH/AXgB3wH9
        Af8BfAHHAfMB/wNTAaQDFAEZoAADHwErAWABZAFhAdUBgQHPAZwB/wFRAakBlgH/AUYBhAGtAf8BQwGB
        AcIB/wE1AYEBsgH/ATsBgQGLAf8BSwHHAYEB/wFKAasBgAH/AVYBVwFWAawDEgEWFAADKAE6AWACbAHy
        AWMBqgHnAf8BOgF3AcMB/wFuAcIB8AH/AVMBugHwAf8BOQGfAegB/wE7AZAB4gH/ATsBkAHiAf8BPAGK
        Ad4B/wNcAcADHwErkAADAwECAVwBXwFcAcMBYwGKAe8B/wFMAZkC/wFBAZEB/AH/AUUBlQH9Af8BQQGG
        AfcB/wEuAWsBgQH/Az8BaiQAAWACbAHyAWYBzQH0Af8BNAGMAd4B/wE2Ab0B9AH/ATcBvgH0Af8BNwG+
        AfQB/wE3Ab4B9AH/ATcBvwH0Af8BNwHHAfgB/wE9AYEB1AH/AyABLJAAA2EBzgFuAa8B/QH/AU4BnQH6
        Af8BUAGeAfsB/wFPAZ4B+gH/AVABoQH8Af8BQwGBAd4B/wMWARwkAAMoAToBYwJwAe4BVwHQAfcB/wE3
        AcEB9AH/ATcBwQH0Af8BNwHBAfQB/wE3AcEB9AH/ATcBwQH0Af8BNwHCAfUB/wE3AckB+AH/AVcCWQG2
        kAABgQHCAfUB/wFwAbcB/gH/AVgBqQH7Af8BWgGsAfsB/wFdAawB/gH/AVwBrAH9Af8BYgG3Av8DOgFe
        KAADSwGJAVEBzQH1Af8BNwHFAfQB/wE3AcUB9AH/ATcBxQH0Af8BNwHFAfQB/wE0AcQB9AH/ATYBxQH0
        Af8BNwHGAfQB/wFfAm4B8IwAAxUBGwGFAboB3wH/AYEB1AL/AYEBywL/AYEBxAH9Af8BeQHAAfwB/wF3
        Ab8B/AH/AYABzQL/A0MBcygAA2EBzgFNAdYB+AH/ATcByQH0Af8BNwHJAfQB/wE3AcoB9AH/AT8BvwHw
        Af8BXQJjAd8BWgHNAfMB/wE8AcwB9QH/AWgBwwHuAf+MAAMUARoBUgFJAUoB/wF3AYEBhgH/AYEBvgHm
        Af8BgQHcAv8BgQHXAv8BgQHXAv8BiAHvAv8DTQGRKAACWwFfAc0BVgHcAfgB/wE2AcwB9AH/ATYBzAH0
        Af8BMwHPAfUB/wFfAmMB0AQAA1oBtAGBAeQB+gH/AYEBzwHwAf+MAAMVARsBUgFNAUsB/wFPAUkBRgH/
        AU0BQwFAAf8BgQGfAaoB/wGLAecC/wGBAc4B4QH/AV4BZgFvAf8DUAGaKAACSwFMAYwBfwHbAfYB/wFO
        AdcB9gH/AV4B2gH2Af8BZwHfAfcB/wNVAaoEAANaAbQBgAHkAfkB/wFgAmUB2IwAAw8BEgFZAVMBUgH/
        AVcBUgFRAf8BVgFSAVAB/wFcAVgBWwH/AmIBZgH/AU4BRAFAAf8BUQFLAUoB/wNRAZwsAAFnAYQBjwH7
        AYEB6gH6Af8BfgHkAfcB/wGBAeQB9wH/AYEB5gH4Af8BgQHTAfAB/wF+AecB+QH/AYEB7QH6Af8DWAGt
        kAADUgGfAV4BWQFYAf8BXQFYAVYB/wFcAVYBVAH/AVoBVAFSAf8BWgFUAVMB/wFYAVIBUQH/AzYBVywA
        Az8BawGMAccB7QH/AYcB6gH4Af8BgQHrAfkB/wGBAesB+QH/AYEB7QH6Af8BgQHaAfMB/wNTAaEDDgER
        lAADUwGkAWIBXgFbAf8BaAJmAfkDUgGgA1oBvgMrAT84AANXAasBgQGxAeUB/wGBAa8B4wH/A2oB4QNA
        AW2IAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQABgAEBAQ8B/wQAAYABAQEH
        Af8EAAGAAQEBAwH/BAABgAEBAYEB/wQAAYABAQGAAf8EAAGAAQMB4AE/BAABwAEDAeABAQQAAeABDwH4
        BQAB8AEPAfgFAAHwAQ8B/AUAAeABDwH8BQAB4AEPAfwBCAQAAeABDwH8AQgEAAHgAQ8B/gUAAfABDwH+
        BQAB+AEfAf8BgwQACw==
</value>
  </data>
</root>