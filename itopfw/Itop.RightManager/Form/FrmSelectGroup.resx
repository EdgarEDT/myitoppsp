<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABq
        BQAAAk1TRnQBSQFMAwEBAAEEAQABBAEAARQBAAEUAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABUAMA
        ARQDAAEBAQABGAUAAcABEv8AHgADQhIAAw3YAAHJAaYBEAHqAdwBogH5AfQB4gH8AfoB8AH8AfoB8QH5
        AfQB4wHrAd0BpAHQAbIBMNUAAdsBwwFeAesB3gGnAfEB5wG/AfYB8AHYAfwB+QHwAfwB+QHxAfcB8QHa
        AfEB6AHBAesB3wGpAdsBxAFgyQADagMAAfIB6QHFAdoBwQFYAeUB1AGOAewB3wGpAfEB6QHDAfYB8AHW
        AfYB8AHXAfIB6QHFAewB3wGrAeYB1QGQAdoBwQFbAfIB6AHEwwABtAHbAZwB4gHxAdkB2AHsAcwB5wHX
        AZQB1wG8AU0B3wHKAXIB5wHWAZMB7AHfAakB7wHkAbcB7wHkAbgB7AHfAaoB5wHXAZQB3wHLAXQB2AG9
        AU8B5wHWAZO9AAE9AaMBAAG9Ad8BqAHZAewBzQHzAfkB7wHpAfQB4gHdAcYBZwHPAa8BKgHaAcEBWQHk
        AdMBigHpAdkBmgHqAdwBowHqAd0BowHpAdoBmgHlAdQBiwHaAcIBWwHIAaQBCwHdAcYBZr0AAaEBzgF4
        AZ8B0QGBAb4B4QGqAdIB6QHEAcwB5wG8AbEB2gGZAdkBvwFVAdQBuAFCAeYB1QGPAegB2QGaAeoB2wGg
        AeoB2wGgAegB2QGaAeYB1QGQAdUBuQFEAdoBwQFZATEBKL4AAY4BxQFhAYcBxgFiAa0B2AGUAbkB3QGi
        AbYB3AGeAaYB1AGKAcYBoAEAAcYBoAEAAeoB3AGiAewB3wGpAewB4AGsAewB4AGsAewB3wGpAeoB3AGj
        AcYBoQECAcwBqwEdvQADagE/AaQBAgFmAbYBNgG1AdsBngG7Ad4BpQG5Ad4BowGxAdoBmAGWAcwBcwHG
        AaABAAHMAasBHQH0AewBzwH5AfUB5QH5AfUB5QH0AewBzwHNAasBHgHGAaABAcYAAT0BowEAAdoB7QHP
        AekB9ALjAfIB2wFSAa0BHAMAAygDAAHGAaABAAH9AfsB9QH9AfsB9QHGAaDQAAFqAcUBZgHlAfYB5AHI
        AesBxgEmAWUBAAPHAwAB3gHFAXIB9AHsAc4B+QH2AeYB+gH2AekB9QHuAdMB3wHGAXXJAAE9AaMBAAG4
        Ad0BogHOAecBvwHJAeUBuAGKAcoBdwMAARgBFAEAAeYB1QGQAewB4AGtAfAB5wG/AfEB5wHAAe0B4QGw
        AeYB1wGUAVYBRscAAS4BmQEeAaoB1gGPAbUB3AGeAbIB2wGbAYgBxgFoAwABxgGgAQAB3wHLAXMB6AHZ
        AZkB6gHdAaQB6wHdAaQB6AHZAZsB4AHMAXcBxgGgygABvgHgAawBxgHjAbQBxQHjAbMBNwGaARsDAAHG
        AaABAAHlAdMBiwHoAdgBlwHpAdsBngHpAdsBngHoAdkBmAHmAdQBjQHGAaDHAAMNAwABHAGGAQMBLQGV
        CgABygGmASYB7QHhAbAB7gHjAbMB7gHjAbQB7QHiAbEBywGoASjhAAHCAZoBDwH6AfcB6wH6AfcB6wHE
        AZwBEP8A/wD/AJYAAUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAL/AfAJAAH/
        AYABcAkAAf8BAAEwCQAB/AsAAfgLAAHACwABgAsAAYABAAEQCQABgAEAARAJAAGAAQABMAkAAcABAAFw
        CQAB4AEAAXAJAAHgAQABcAkAAeABAAFwCQAB4AEAAXAJAAHgAYABcAkAAf8BwAHwCQAB/wHhAfAJAAL/
        AfAJAAL/AfAJAAs=
</value>
  </data>
</root>